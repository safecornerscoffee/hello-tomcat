<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.safecornerscoffee.mapper.ArticleMapper">
    <resultMap id="Article" type="com.safecornerscoffee.domain.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="body" property="body"/>
        <result column="authorId" property="authorId"/>
    </resultMap>
    <resultMap id="detailedArticle" type="com.safecornerscoffee.domain.Article">
        <id property="id" column="article_id"/>
        <result property="title" column="article_title"/>
        <result property="body" column="article_body"/>
        <result property="authorId" column="article_author_id"/>
        <collection property="tags" ofType="com.safecornerscoffee.domain.Tag">
            <id property="id" column="tag_id"/>
            <result property="name" column="tag_name"/>
        </collection>
    </resultMap>

    <select id="selectArticleDetailsById"
            parameterType="Long"
            resultMap="detailedArticle">
        SELECT
            A.id as article_id,
            A.title as article_title,
            A.body as article_body,
            A.authorid as article_author_id,
            T.id as tag_id,
            T.name as tag_name
        FROM articles A
                 LEFT OUTER JOIN tags T on A.id = T.article_id
        WHERE A.id = #{id};
    </select>

    <select id="nextId" resultType="Long">
        SELECT nextval('articles_id_seq')
    </select>
    <select id="selectAllArticles" resultMap="Article">
        SELECT id, title, body, authorid
        FROM articles
    </select>
    <select id="selectArticleById"
            parameterType="Long"
            resultMap="Article">
        SELECT id, title, body, authorid
        FROM articles
        WHERE id = #{id}
    </select>
    <select id="selectArticlesByAuthorId"
            parameterType="Long"
            resultMap="Article">
        SELECT id, title, body, authorid
        FROM articles
        WHERE authorid = #{authorId}
    </select>
    <insert id="insertArticle" parameterType="com.safecornerscoffee.domain.Article">
        INSERT INTO articles(id, title, body, authorid)
        VALUES (#{id}, #{title}, #{body}, #{authorId})
    </insert>
    <update id="updateArticle" parameterType="com.safecornerscoffee.domain.Article">

    </update>
    <delete id="deleteArticle" parameterType="com.safecornerscoffee.domain.Article">
        DELETE FROM articles WHERE id = #{id}
    </delete>
</mapper>